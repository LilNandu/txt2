/*
Title: Curve Generation using Parametric Equation
Description: Program to generate a Bezier Curve
*/

#include <stdio.h>
#include <stdlib.h>
#include <graphics.h>
#include <math.h>

// Function to draw a Bezier curve using control points
void bezier(int x[4], int y[4]) {
    int gd = DETECT, gm; // Graphics mode variables
    int i; // Loop variable
    double p; // Parameter for curve generation

    // Initialize graphics
    initgraph(&gd, &gm, "");

    // Loop to calculate and plot the points on the Bezier curve
    for (p = 0.0; p < 1.0; p += 0.0005) {
        // Calculate the x and y coordinates using the Bezier formula
        double xt = pow(1 - p, 3) * x[0] + 
                    3 * p * pow(1 - p, 2) * x[1] +
                    3 * pow(p, 2) * (1 - p) * x[2] + 
                    pow(p, 3) * x[3];

        double yt = pow(1 - p, 3) * y[0] + 
                    3 * p * pow(1 - p, 2) * y[1] +
                    3 * pow(p, 2) * (1 - p) * y[2] + 
                    pow(p, 3) * y[3];

        // Plot the calculated point on the graphics window
        putpixel(xt, yt, WHITE);
    }

    // Plot the control points in yellow
    for (i = 0; i < 4; i++)
        putpixel(x[i], y[i], YELLOW);

    getch(); // Wait for user input before closing
    closegraph(); // Close graphics mode
    return;
}

// Main function
void main() {
    int x[4], y[4]; // Arrays to store control points
    int i; // Loop variable

    // Prompt user for control points
    printf("Enter the x- and y-coordinates of the four control points.\n");
    for (i = 0; i < 4; i++)
        scanf("%d%d", &x[i], &y[i]);

    // Call the bezier function to draw the curve
    bezier(x, y);
}
